# This file invokes Nox sessions to run tests, build documentation, and
# perform other continuous integration (CI) checks. The Nox sessions are
# defined in noxfile.py.

name: CI

on:
  push:
    branches:
    - master
    - main
  pull_request:
  workflow_dispatch:

permissions: {}  # disable all GitHub permissions for the workflow

jobs:

  tests:
    name: ${{ matrix.name }}
    runs-on: ${{ matrix.os }}
    timeout-minutes: 30

    strategy:
      fail-fast: false

      matrix:
        include:

        - name: Tests, Python 3.13, skip slow tests, doctests, Ubuntu
          # Doctests are run only for most recent Python (see noxfile.py)
          os: ubuntu-latest
          python: '3.13'
          nox_session: tests-3.13(skipslow)

        - name: Tests, Python 3.12, with code coverage, macOS
          os: macos-latest
          python: '3.12'
          nox_session: tests-3.12(cov)

        - name: Tests, Python 3.11, lowest direct dependencies, skip slow tests, Windows
          os: windows-latest
          python: '3.11'
          nox_session: tests-3.11(lowest-direct-skipslow)

        - name: Documentation, Python 3.13, Ubuntu
          os: ubuntu-latest
          python: '3.13'
          nox_session: docs

        - name: Static type checking with mypy, Python 3.13, Ubuntu
          os: ubuntu-latest
          python: '3.13'
          nox_session: mypy

        - name: Packaging, Python 3.13, Ubuntu
          os: ubuntu-latest
          python: '3.13'
          nox_session: build

        - name: Validate CITATION.cff
          os: ubuntu-latest
          python: '3.13'
          nox_session: cff

        - name: Check workflow security with zizmor
          os: ubuntu-latest
          python: '3.13'
          nox_session: zizmor

        - name: Check consistency of pinned & project requirements
          os: ubuntu-latest
          python: '3.13'
          nox_session: validate_requirements

    steps:

    - name: Checkout code
      uses: actions/checkout@v5
      with:
        persist-credentials: false

    - name: Install uv
      uses: astral-sh/setup-uv@v6
      with:
        python-version: ${{ matrix.python }}
        enable-cache: true
        cache-suffix: ${{ matrix.nox_session }}-${{ matrix.python }}-${{ runner.os }}

    - name: Run the check
      run: uvx nox -s '${{ matrix.nox_session }}'

    - name: Upload coverage reports to Codecov
      if: ${{ contains(matrix.nox_session, 'cov') }}
      uses: codecov/codecov-action@v5
      with:
        file: ./coverage.xml
        fail_ci_if_error: false
      env:
        CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}
